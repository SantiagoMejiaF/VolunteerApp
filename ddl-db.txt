-- Creación de esquemas
CREATE SCHEMA IF NOT EXISTS modulo_gestion_usuarios;
CREATE SCHEMA IF NOT EXISTS modulo_gestion_voluntarios;
CREATE SCHEMA IF NOT EXISTS modulo_gestion_organizaciones;
CREATE SCHEMA IF NOT EXISTS modulo_gestion_misiones_y_actividades;

-- Tabla RoleEntity
CREATE TABLE modulo_gestion_usuarios.ROL (
    ID SERIAL PRIMARY KEY,
    TIPO_ROL VARCHAR(12) NOT NULL
);

-- Tabla UserEntity
CREATE TABLE modulo_gestion_usuarios.USUARIO (
    ID SERIAL PRIMARY KEY,
    ROL_ID INTEGER NOT NULL REFERENCES modulo_gestion_usuarios.ROL(ID) ON DELETE CASCADE,
    ESTADO_AUTORIZACION VARCHAR(255) NOT NULL,
    NOMBRE VARCHAR(20),
    APELLIDO VARCHAR(20),
    CORREO VARCHAR(50) UNIQUE NOT NULL,
    IMAGEN VARCHAR(255),
    FECHA_REGISTRO DATE NOT NULL
);

-- Tabla EmergencyInformationEntity
CREATE TABLE modulo_gestion_voluntarios.INFORMACION_EMERGENCIA (
    ID SERIAL PRIMARY KEY,
    NOMBRE VARCHAR(50) NOT NULL,
    APELLIDO VARCHAR(50) NOT NULL,
    TELEFONO VARCHAR(10) NOT NULL,
    CORREO VARCHAR(50) NOT NULL,
    PARENTESCO SMALLINT NOT NULL
);

-- Tabla PersonalInformationEntity
CREATE TABLE modulo_gestion_voluntarios.INFORMACION_PERSONAL (
    ID SERIAL PRIMARY KEY,
    CEDULA VARCHAR(10) UNIQUE NOT NULL,
    DIRECCION VARCHAR(50) NOT NULL,
    AGE INTEGER NOT NULL,
    BORN_DATE DATE NOT NULL,
    TELEFONO VARCHAR(10) NOT null,
    DESCRIPCION_PERSONAL VARCHAR(1000) NOT NULL
);

-- Tabla VolunteeringInformationEntity
CREATE TABLE modulo_gestion_voluntarios.INFORMACION_VOLUNTARIADO (
    ID SERIAL PRIMARY KEY,
    HORAS_VOLUNTARIADAS INTEGER NOT NULL,
    TIPO_VOLUNTARIO VARCHAR(10) NOT null,
    ACTIVIDADES_COMPLETADAS INTEGER not NULL
);

-- Tabla VolunteerEntity
CREATE TABLE modulo_gestion_voluntarios.VOLUNTARIO (
    ID SERIAL PRIMARY KEY,
    USUARIO_ID INTEGER UNIQUE NOT NULL,
    ORGANIZACION_ID INTEGER,
    VISIBILIDAD SMALLINT not null, 
    INFORMACION_PERSONAL_ID INTEGER REFERENCES modulo_gestion_voluntarios.INFORMACION_PERSONAL(ID) ON DELETE CASCADE,
    INFORMACION_VOLUNTARIADO_ID INTEGER REFERENCES modulo_gestion_voluntarios.INFORMACION_VOLUNTARIADO(ID) ON DELETE CASCADE,
    INFORMACION_EMERGENCIA_ID INTEGER REFERENCES modulo_gestion_voluntarios.INFORMACION_EMERGENCIA(ID) ON DELETE CASCADE
);

-- Tabla OrganizationEntity
CREATE TABLE modulo_gestion_organizaciones.ORGANIZACION (
    ID SERIAL PRIMARY KEY,
    USUARIO_ID INTEGER UNIQUE NOT NULL,
    CEDULA_RESPONSABLE VARCHAR(10) UNIQUE NOT NULL,
    TELEFONO_RESPONSABLE VARCHAR(10) NOT NULL,
    NOMBRE_ORGANIZACION VARCHAR(50) NOT NULL,
    TIPO_ORGANIZACION VARCHAR(21),
    SECTOR VARCHAR(50) NOT NULL,
    TIPO_VOLUNTARIADO VARCHAR(21),
    NIT VARCHAR(10) UNIQUE NOT NULL,
    DIRECCION_ORGANIZACION VARCHAR(50) NOT NULL
);


-- Tabla MissionEntity
CREATE TABLE modulo_gestion_misiones_y_actividades.MISION (
    ID SERIAL PRIMARY KEY,
	ORGANIZACION_ID INTEGER,
    TIPO_MISION VARCHAR(15) NOT NULL,
    TITULO VARCHAR(100) NOT NULL,
    DESCRIPCION VARCHAR(1000) NOT NULL,
    FECHA_INICIO DATE NOT NULL,
    FECHA_FIN DATE NOT NULL,
    CIUDAD VARCHAR(200) NOT NULL,
    VISIBILIDAD VARCHAR(10) NOT NULL,
    ESTADO VARCHAR(10) NOT NULL
);

CREATE TABLE modulo_gestion_misiones_y_actividades.REQUISITOS_REQUERIDOS (
    MISSION_ID INTEGER NOT NULL,
    REQUISITOS VARCHAR(255), 
    FOREIGN KEY (MISSION_ID) REFERENCES modulo_gestion_misiones_y_actividades.MISION(ID) ON DELETE CASCADE
);

CREATE TABLE modulo_gestion_misiones_y_actividades.HABILIDADES_REQUERIDAS (
    MISSION_ID INTEGER NOT NULL,
    HABILIDADES VARCHAR(255), 
    FOREIGN KEY (MISSION_ID) REFERENCES modulo_gestion_misiones_y_actividades.MISION(ID) ON DELETE CASCADE
);

-- Crear tabla LIDER_COMUNIDAD
CREATE TABLE MODULO_GESTION_MISIONES_Y_ACTIVIDADES.LIDER_COMUNIDAD (
    ID SERIAL PRIMARY KEY,
    NOMBRE VARCHAR(200) NOT NULL,
    CEDULA VARCHAR(200) NOT NULL,
    CORREO VARCHAR(200) NOT NULL,
    CELULAR VARCHAR(200) NOT NULL
);

-- Crear tabla COORDINADOR_ACTIVIDAD
CREATE TABLE MODULO_GESTION_MISIONES_Y_ACTIVIDADES.COORDINADOR_ACTIVIDAD (
    ID SERIAL PRIMARY KEY,
    USUARIO_ID INTEGER NOT NULL,
    ORGANIZACION_ID INTEGER,
    NOMBRE VARCHAR(200) NOT NULL,
    APELLIDO VARCHAR(200) NOT NULL,
    CEDULA VARCHAR(200) NOT NULL,
    CORREO VARCHAR(200) NOT NULL,
    CELULAR VARCHAR(200) NOT NULL
);

-- Tabla ActivityEntity
CREATE TABLE modulo_gestion_misiones_y_actividades.ACTIVIDAD (
    ID SERIAL PRIMARY KEY,
    MISSION_ID INTEGER NOT NULL,
    LIDER_COMUNIDAD_ID INTEGER,
    COORDINADOR_ACTIVIDAD_ID INTEGER,
    TITULO VARCHAR(100) NOT NULL,
    DESCRIPCION VARCHAR(1000),
    FECHA DATE NOT NULL,
    HORA_INICIO TIME NOT NULL,
    HORA_FIN TIME NOT NULL,
    DIRECCION VARCHAR(200) NOT NULL,
    NUMERO_VOLUNTARIOS_REQUERIDOS INTEGER NOT NULL,
    HORAS_REQUERIDAS INTEGER,
    ESTADO VARCHAR(30) NOT NULL,
    OBSERVACIONES VARCHAR(1000),
    
    -- Definición de claves foráneas
	FOREIGN KEY (MISSION_ID) REFERENCES modulo_gestion_misiones_y_actividades.MISION(ID) ON DELETE CASCADE,
    FOREIGN KEY (LIDER_COMUNIDAD_ID) REFERENCES modulo_gestion_misiones_y_actividades.LIDER_COMUNIDAD(ID) ON DELETE CASCADE,
    FOREIGN KEY (COORDINADOR_ACTIVIDAD_ID) REFERENCES modulo_gestion_misiones_y_actividades.COORDINADOR_ACTIVIDAD(ID) ON DELETE CASCADE
);

-- Crear tabla POSTULACION
CREATE TABLE MODULO_GESTION_MISIONES_Y_ACTIVIDADES.POSTULACION (
    ID SERIAL PRIMARY KEY,
    VOLUNTARIO_ID INTEGER NOT NULL,
    ORGANIZACION_ID INTEGER,
    ACTIVIDAD_ID INTEGER NOT NULL,
    ESTADO VARCHAR(10) NOT NULL,
    FECHA_POSTULACION DATE NOT NULL,
    FECHA_APROBACION DATE,
    COMENTARIOS VARCHAR(1000),
    CONSTRAINT FK_ACTIVIDAD FOREIGN KEY (ACTIVIDAD_ID) REFERENCES MODULO_GESTION_MISIONES_Y_ACTIVIDADES.ACTIVIDAD(ID)
);

-- Crear tabla GRUPO_VOLUNTARIO
CREATE TABLE MODULO_GESTION_MISIONES_Y_ACTIVIDADES.GRUPO_VOLUNTARIO (
    ID SERIAL PRIMARY KEY,
    ORGANIZACION_ID INTEGER,
    ACTIVITY_ID INTEGER NOT NULL,
    NOMBRE VARCHAR(100) NOT NULL,
    NUMERO_VOLUNTARIOS_REQUERIDOS INTEGER NOT NULL,
    OBSERVACIONES VARCHAR(1000),
    CONSTRAINT FK_ACTIVITY FOREIGN KEY (ACTIVITY_ID) REFERENCES MODULO_GESTION_MISIONES_Y_ACTIVIDADES.ACTIVIDAD(ID)
);

-- Crear tabla intermedia MIEMBROS_GRUPO_VOLUNTARIO para la relación Many-to-Many
CREATE TABLE MODULO_GESTION_MISIONES_Y_ACTIVIDADES.MIEMBROS_GRUPO_VOLUNTARIO (
    GRUPO_ID INTEGER NOT NULL,
    VOLUNTARIO_ID INTEGER NOT NULL,
    CONSTRAINT FK_GRUPO FOREIGN KEY (GRUPO_ID) REFERENCES MODULO_GESTION_MISIONES_Y_ACTIVIDADES.GRUPO_VOLUNTARIO(ID),
    CONSTRAINT FK_VOLUNTARIO FOREIGN KEY (VOLUNTARIO_ID) REFERENCES modulo_gestion_voluntarios.VOLUNTARIO(ID),
    PRIMARY KEY (GRUPO_ID, VOLUNTARIO_ID)
);


-- Creación de tablas para enums y colecciones
CREATE TABLE modulo_gestion_voluntarios.DIAS_DISPONIBLES_VOLUNTARIO (
    INFORMACION_VOLUNTARIADO_ID INTEGER REFERENCES modulo_gestion_voluntarios.INFORMACION_VOLUNTARIADO(ID),
    DIA VARCHAR(255)
);

CREATE TABLE modulo_gestion_voluntarios.INTERESES_VOLUNTARIO (
    INFORMACION_VOLUNTARIADO_ID INTEGER REFERENCES modulo_gestion_voluntarios.INFORMACION_VOLUNTARIADO(ID),
    INTERESES VARCHAR(255)
);

CREATE TABLE modulo_gestion_voluntarios.HABILIDADES_VOLUNTARIO (
    INFORMACION_VOLUNTARIADO_ID INTEGER REFERENCES modulo_gestion_voluntarios.INFORMACION_VOLUNTARIADO(ID),
    HABILIDADES VARCHAR(255)
);

ALTER SEQUENCE modulo_gestion_voluntarios.informacion_personal_id_seq INCREMENT BY 1;
